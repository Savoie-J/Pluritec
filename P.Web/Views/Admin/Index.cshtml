@using P.Data.Models;
@using Newtonsoft.Json;

@model IEnumerable<Specification>
@{
    ViewBag.Title = "Admin";
    Specification specification = new Specification
    {
        Offset = 0.1967,
        Tolerance = 0.005
    };
}

<h2 class="text-center largeScreen">
    <pre style="background-color: white; border: none; padding: 0px; font-size: 11px; font-weight: bolder;">

__/\\\\\\\\\\\\\_____/\\\\\\____________________________________________________________________________________________________/\\\__________________________________________        
 _\/\\\/////////\\\__\////\\\___________________________________________________________________________________________________\/\\\__________________________________________       
  _\/\\\_______\/\\\_____\/\\\____________________________________/\\\______/\\\_________________________________________________\/\\\_______________________________/\\\\\\\\__      
   _\/\\\\\\\\\\\\\/______\/\\\______/\\\____/\\\___/\\/\\\\\\\___\///____/\\\\\\\\\\\______/\\\\\\\\_______/\\\\\\\\_____________\/\\\__________________/\\\\\______/\\\////\\\_     
    _\/\\\/////////________\/\\\_____\/\\\___\/\\\__\/\\\/////\\\___/\\\__\////\\\////_____/\\\/////\\\____/\\\//////______________\/\\\________________/\\\///\\\___\//\\\\\\\\\_    
     _\/\\\_________________\/\\\_____\/\\\___\/\\\__\/\\\___\///___\/\\\_____\/\\\________/\\\\\\\\\\\____/\\\_____________________\/\\\_______________/\\\__\//\\\___\///////\\\_   
      _\/\\\_________________\/\\\_____\/\\\___\/\\\__\/\\\__________\/\\\_____\/\\\_/\\___\//\\///////____\//\\\____________________\/\\\______________\//\\\__/\\\____/\\_____\\\_  
       _\/\\\_______________/\\\\\\\\\__\//\\\\\\\\\___\/\\\__________\/\\\_____\//\\\\\_____\//\\\\\\\\\\___\///\\\\\\\\_____________\/\\\\\\\\\\\\\\\___\///\\\\\/____\//\\\\\\\\__ 
        _\///_______________\/////////____\/////////____\///___________\///_______\/////_______\//////////______\////////______________\///////////////______\/////_______\////////___

    </pre>
</h2>

<p>
    <button type="button" class="mainbtn" id="log_add">New Specification</button>
</p>

<table class="table table-striped table-bordered" id="log_table">
    <thead>
        <tr>
            <th style="text-align: center">
                @Html.DisplayNameFor(model => model.PartNumber)
            </th>
            <th style="text-align: center">
                @Html.DisplayNameFor(model => model.LayerOne)
            </th>
            <th style="text-align: center">
                @Html.DisplayNameFor(model => model.LayerTwo)
            </th>
            <th style="text-align: center">
                @Html.DisplayNameFor(model => model.Tolerance)
            </th>
            <th style="text-align: center">
                @Html.DisplayNameFor(model => model.Offset)
            </th>
            <th style="text-align: center">
                @Html.DisplayNameFor(model => model.Logs)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (Specification entry in Model)
        {
            string serialized = JsonConvert.SerializeObject(new
            {
                entry.ID,
                entry.PartNumber,
                entry.LayerOne,
                entry.LayerTwo,
                entry.Tolerance,
                entry.Offset
            });
            <tr>
                <td style="text-align: center; vertical-align: middle;">
                    @Html.DisplayFor(model => entry.PartNumber)
                </td>
                <td style="text-align: center; vertical-align: middle;">
                    @Html.DisplayFor(model => entry.LayerOne)
                </td>
                <td style="text-align: center; vertical-align: middle;">
                    @Html.DisplayFor(model => entry.LayerTwo)
                </td>
                <td style="text-align: center; vertical-align: middle;">
                    @Html.DisplayFor(model => entry.Tolerance)
                </td>
                <td style="text-align: center; vertical-align: middle;">
                    @Html.DisplayFor(model => entry.Offset)
                </td>
                <td style="text-align: center; vertical-align: middle;">
                    @Html.DisplayFor(model => entry.Logs.Count)
                </td>
                <td style="text-align: center; vertical-align: middle;">
                    <button type="button" class="btn-link log_edit" data-log='@Html.Raw(serialized)'>Edit</button>
                    @Html.ActionLink("Logs", "Log", new { id = entry.ID }, new { @class = "btn btn-xs btn-primary" })
                </td>
            </tr>
        }
    </tbody>
</table>

<div id="log_modal" class="modal fade">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title" id="log_title">New Log Entry</h4>
            </div>
            <form id="log_form">
                <div class="modal-body" style="padding-bottom: 0;">
                    <div class="row">
                        <div class="col-md-12">
                            <div class="form-group">
                                @Html.LabelFor(model => specification.PartNumber, new { @class = "control-label required-field-label" })
                                @Html.EditorFor(model => specification.PartNumber, new { htmlAttributes = new { @class = "form-control log_input log_focus", style = "width: 100%; max-width: 100%;", autocomplete = "off", tabindex = "8998", @readonly = "true" } })
                                @Html.ValidationMessageFor(model => specification.PartNumber, string.Empty, new { @class = "alert-danger log_validation" })
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                @Html.LabelFor(model => specification.Offset, new { @class = "control-label required-field-label" })
                                @Html.EditorFor(model => specification.Offset, new { htmlAttributes = new { @class = "form-control log_input", required = "true", autocomplete = "off", tabindex = "8999", type = "number", step = "0.00001" } })
                                @Html.ValidationMessageFor(model => specification.Offset, string.Empty, new { @class = "alert-danger log_validation" })
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => specification.LayerOne, new { @class = "control-label required-field-label" })
                                @Html.EditorFor(model => specification.LayerOne, new { htmlAttributes = new { @class = "form-control log_input", required = "true", autocomplete = "off", tabindex = "9001", type = "number" } })
                                @Html.ValidationMessageFor(model => specification.LayerOne, string.Empty, new { @class = "alert-danger log_validation" })
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                @Html.LabelFor(model => specification.Tolerance, new { @class = "control-label required-field-label" })
                                @Html.EditorFor(model => specification.Tolerance, new { htmlAttributes = new { @class = "form-control log_input", required = "true", autocomplete = "off", tabindex = "9000", type = "number", step = "0.00001" } })
                                @Html.ValidationMessageFor(model => specification.Tolerance, string.Empty, new { @class = "alert-danger log_validation" })
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => specification.LayerTwo, new { @class = "control-label required-field-label" })
                                @Html.EditorFor(model => specification.LayerTwo, new { htmlAttributes = new { @class = "form-control log_input", required = "true", autocomplete = "off", tabindex = "9002", type = "number" } })
                                @Html.ValidationMessageFor(model => specification.LayerTwo, string.Empty, new { @class = "alert-danger log_validation" })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer no-border" id="log_save">
                    <button type="submit" class="btn btn-default">Save</button>
                    @Html.HiddenFor(model => specification.ID, new { @class = "log_input" })
                    <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
                </div>
            </form>
        </div>
    </div>
</div>

<div id="load_modal" class="modal fade">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Loading...</h4>
            </div>
            <div class="modal-body">
                <h4>Please wait</h4>
            </div>
        </div>
    </div>
</div>

<div id="error_modal" class="modal fade">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Error Message</h4>
            </div>
            <div class="modal-body">
                <h4 id="error_msg"></h4>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Ok</button>
            </div>
        </div>
    </div>
</div>

@section Scripts
{
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        var default_specification = @Html.Raw(JsonConvert.SerializeObject(specification));

        $(document).ready(function () {
            $("#log_table").DataTable({
                "lengthMenu": [[-1, 10, 25, 50], ["All", 10, 25, 50]],
                "order": [[0, "desc"]]
            });

            $("#log_add").click(function () {
                $(".log_input").val([]);
                $(".log_validation").empty();
                $(".log_input").removeAttr('readonly');
                $("#log_title").text('New Specification');

                $.each(default_specification, function (name, value) {
                    var target = $("#specification_" + name);

                    if (target.is(':checkbox'))
                        target.prop('checked', value);
                    else
                        target.val(value);
                });

                $("#log_modal").modal('show');
            });

            $('#log_modal').on('shown.bs.modal', function (e) {
                $(".log_focus").focus();
            })

            $(".log_edit").click(function () {
                $(".log_input").val([]);
                $(".log_validation").empty();

                var log = $(this).data('log');

                $.each(log, function (name, value) {
                    var target = $("#specification_" + name);

                    if (target.is(':checkbox'))
                        target.prop('checked', value);
                    else
                        target.val(value);
                });

                $("#log_title").text('Edit Specification');
                $("#log_modal").modal('show');
            });

            $("#log_form").submit(function (e) {
                e.preventDefault();

                if (!$(this).valid())
                    return;

                $("#load_modal").modal('show');

                $.post(
                    '@Url.Action("Index", "Admin", null, Request.Url.Scheme)',
                    {
                        'PartNumber': $("#specification_PartNumber").val(),
                        'LayerOne': $("#specification_LayerOne").val(),
                        'Tolerance': $("#specification_Tolerance").val(),
                        'LayerTwo': $("#specification_LayerTwo").val(),
                        'Offset': $("#specification_Offset").val(),
                        'ID': $("#specification_ID").val(),
                    },
                    function (res) {
                        $("#load_modal").modal('hide');

                        if (!res)
                            return window.location.reload();

                        $("#error_msg").html(res);
                        $("#error_modal").modal('show');
                    }
                );
            });
        });
    </script>
}